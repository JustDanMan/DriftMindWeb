name: Weekly rebuild from last release

on:
  schedule:
    # Every Monday at 02:00 UTC
    - cron: '0 2 * * 1'
  # Allow manual trigger
  workflow_dispatch: {}

jobs:
  build-and-push-latest:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Resolve latest release tag
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const { owner, repo } = context.repo;
              const rel = await github.rest.repos.getLatestRelease({ owner, repo });
              core.info(`Latest release tag: ${rel.data.tag_name}`);
              core.setOutput('tag', rel.data.tag_name);
            } catch (e) {
              core.setFailed(`Failed to resolve latest release: ${e.message}`);
            }

      - name: Checkout repository at latest release tag
        uses: actions/checkout@v5
        with:
          ref: refs/tags/${{ steps.get_release.outputs.tag }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image as latest (lowercase repo name)
        run: |
          IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          # Use UTC for deterministic timestamps
          STAMP=$(date -u +%Y%m%d%H%M)
          SECTAG="secbuild-$STAMP"
          echo "Building image from release tag: ${{ steps.get_release.outputs.tag }}"
          echo "Image: $IMAGE_NAME:latest and $IMAGE_NAME:$SECTAG"

          # Always pull newer base images to pick up security fixes
          docker build --pull \
            -t $IMAGE_NAME:latest \
            -t $IMAGE_NAME:$SECTAG \
            .

          echo "Pushing latest..."
          docker push $IMAGE_NAME:latest
          echo "Pushing $SECTAG..."
          docker push $IMAGE_NAME:$SECTAG