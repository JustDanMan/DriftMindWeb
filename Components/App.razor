<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>DriftMindWeb - AI Document Processing</title>
    <meta name="description" content="AI-powered document processing and search application with ChatGPT-like interface" />
    <meta name="keywords" content="AI, document processing, search, chat, artificial intelligence, blazor" />
    <meta name="author" content="DriftMindWeb" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="DriftMindWeb.styles.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    
    <!-- Favicons - Optimized for browser compatibility -->
    <!-- Standard favicon -->
    <link rel="icon" href="/favicon.ico" />
    <!-- Modern browsers -->
    <link rel="icon" type="image/svg+xml" href="/favicon-simple.svg" />
    <!-- PNG fallback -->
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon.png" />
    <!-- Apple devices -->
    <link rel="apple-touch-icon" sizes="180x180" href="/favicon.png" />
    <!-- PWA manifest -->
    <link rel="manifest" href="/site.webmanifest" />
    <!-- Theme colors -->
    <meta name="theme-color" content="#4db8ff" />
    <meta name="msapplication-TileColor" content="#4db8ff" />
    
    <HeadOutlet />
</head>

<body>
    <Routes />
    <script src="_framework/blazor.web.js"></script>
    <script src="bootstrap/bootstrap.bundle.min.js"></script>
    <script src="js/timezone.js"></script>
    <script>
        window.scrollToBottom = (element) => {
            if (element) {
                element.scrollTop = element.scrollHeight;
            }
        };
        
        window.scrollToMessage = (messageId) => {
            const messageElement = document.getElementById(messageId);
            if (messageElement) {
                // Scrolle zum Anfang der Nachricht mit einem sanften Übergang
                messageElement.scrollIntoView({ 
                    behavior: 'smooth', 
                    block: 'start',
                    inline: 'nearest'
                });
            }
        };

        // Auto-reload if Blazor cannot reconnect the circuit
        (function setupBlazorAutoReload(){
            let reloading = false;
            let reconnectTimer = null;
            window.addEventListener('blazor:reconnectionfailed', () => {
                if (reloading) return;
                reloading = true;
                // Give a short grace period, then reload
                setTimeout(() => {
                    try { sessionStorage.setItem('dmw.autoReload', '1'); } catch {}
                    window.location.reload();
                }, 500);
            });

            // Optional: if initial connect fails
            window.addEventListener('blazor:connectionerror', () => {
                if (reloading) return;
                reloading = true;
                setTimeout(() => {
                    try { sessionStorage.setItem('dmw.autoReload', '1'); } catch {}
                    window.location.reload();
                }, 800);
            });

            // Fallback: if reconnect takes too long, reload
            window.addEventListener('blazor:reconnecting', () => {
                if (reloading) return;
                if (reconnectTimer) clearTimeout(reconnectTimer);
                // Wait 120s; if still not reconnected, reload
                reconnectTimer = setTimeout(() => {
                    if (reloading) return;
                    reloading = true;
                    try { sessionStorage.setItem('dmw.autoReload', '1'); } catch {}
                    window.location.reload();
                }, 120000);
            });

            window.addEventListener('blazor:reconnected', () => {
                if (reconnectTimer) {
                    clearTimeout(reconnectTimer);
                    reconnectTimer = null;
                }
            });
        })();
    </script>
</body>

</html>
